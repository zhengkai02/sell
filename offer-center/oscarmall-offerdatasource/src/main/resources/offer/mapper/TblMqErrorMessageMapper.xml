<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwhalecloud.retail.offer.mapper.TblMqErrorMessageMapper">


    <insert id="insertErrorMessage" parameterType="com.iwhalecloud.retail.offer.entity.TblMqErrorMessage">
        insert into tbl_mq_error_message (message_id, topic, message_content, create_time, deal_date, state,
        state_date, comments, modify_by, modify_time, exchange, queue, rehandle_times, create_by)
        values (#{messageId},#{topic},#{messageContent},sysdate(),sysdate(),#{state},sysdate(),#{comments},
        #{modifyBy},#{modifyTime},#{exchange},#{queue},#{rehandleTimes}, #{createBy}
        )
    </insert>

    <update id="retryFail" parameterType="com.iwhalecloud.retail.offer.entity.TblMqErrorMessage">
        update tbl_mq_error_message
           set state = 'A',
               state_date = now(),
               modify_by = #{modifyBy},
               modify_time = now(),
               deal_date = now(),
               comments = #{comments}
         where message_id = #{messageId}
    </update>

    <update id="finishErrorMessage">
        update tbl_mq_error_message
           set state = 'C',
               state_date = now(),
               modify_time = now(),
               modify_by = #{modifyBy}
               deal_date = now()
         where message_id = #{messageId}
    </update>


    <select id="qryErrorMqMessage" resultType="com.iwhalecloud.retail.offer.dto.resp.QryErrorMqMessageResp" parameterType="com.iwhalecloud.retail.offer.dto.req.QryErrorMqMessageReq">
        select
        message_id, topic, message_content, create_time, create_by, deal_date, state,
        state_date, comments, modify_by, modify_time, exchange, queue, rehandle_times
        from tbl_mq_error_message
        where 1=1

        <if test="req.exchange != null and req.exchange != ''">
            and upper(exchange) like upper(concat(concat('%', #{req.exchange}), '%'))
        </if>

        <if test="req.topic != null and req.topic != ''">
            and upper(topic) like upper(concat(concat('%', #{req.topic}), '%'))
        </if>

        <if test="req.queue != null and req.queue != ''">
            and upper(queue) like upper(concat(concat('%', #{req.queue}), '%'))
        </if>

        <if test="req.state != null and req.state != ''">
            and state = upper(#{req.state})
        </if>
        and state != 'X'

        <if test="req.dealDateFrom != null">
            <![CDATA[ and deal_date >= upper(#{req.dealDateFrom}) ]]>
        </if>

        <if test="req.dealDateTo != null">
            <![CDATA[ and deal_date <= upper(#{req.dealDateTo}) ]]>
        </if>

        order by deal_date desc
    </select>

    <update id="deleteMqErrorMessage">
        update tbl_mq_error_message
           set state = 'X',
               state_date = now(),
               modify_by = #{updateStaffId},
               modify_time = now()
         where message_id = #{messageId}
    </update>

    <update id="resendMqErrorMessage">
        update tbl_mq_error_message
           set state = 'B',
               state_date = now(),
               modify_by = #{modifyBy},
               modify_time = now(),
               rehandle_times = ifnull(rehandle_times, 0) + 1
         where message_id = #{messageId}
    </update>
</mapper>